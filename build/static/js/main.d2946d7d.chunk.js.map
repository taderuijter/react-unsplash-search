{"version":3,"sources":["api/api.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","style","margin","type","value","onChange","e","setState","target","placeholder","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","gridRowEnd","ref","alt","src","regular","ImageList","images","map","id","App","onSearchSubmit","a","api","get","params","query","response","data","results","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAIeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cACE,2D,QCNAC,E,4MAGJC,MAAQ,CAAEC,KAAM,I,EAIhBC,aAAe,SAAAC,GACbA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,4CAIjC,WAAU,IAAD,OACP,OACE,qBAAKM,UAAU,aAAf,SACE,sBAAMD,SAAUE,KAAKN,aAAcK,UAAU,UAA7C,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOE,MAAQ,CAACC,OAAQ,iBAAxB,0BACA,uBACEC,KAAK,OACLC,MAAOJ,KAAKR,MAAMC,KAClBY,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEd,KAAMa,EAAEE,OAAOJ,SAC9CK,YAAY,iC,GAvBFC,IAAMC,WAgCfpB,ICCAqB,G,yDA9Bb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAWRgB,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKP,SAAS,CAAEW,WAbhB,EAAK1B,MAAQ,CAAE0B,MAAO,GACtB,EAAKH,SAAWL,IAAMW,YAHL,E,qDAOnB,WACErB,KAAKe,SAASC,QAAQM,iBAAiB,OAAQtB,KAAKa,Y,oBAWtD,WACE,MAA8Bb,KAAKH,MAAM0B,MAAjCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAErB,OACE,qBAAKxB,MAAO,CAAEyB,WAAW,QAAD,OAAU1B,KAAKR,MAAM0B,QAA7C,SACE,qBAAKS,IAAK3B,KAAKe,SAAUa,IAAKJ,EAAaK,IAAKJ,EAAKK,gB,GA3BrCpB,IAAMC,YCefoB,EARG,SAAAlC,GAChB,IAAMmC,EAASnC,EAAMmC,OAAOC,KAAI,SAAAV,GAC9B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMW,OAG/B,OAAO,qBAAKnC,UAAU,aAAf,SAA6BiC,KCNhCG,E,4MAGJ3C,MAAQ,CAAEwC,OAAQ,I,EAIlBI,e,uCAAiB,WAAO3C,GAAP,eAAA4C,EAAA,sEACQC,EAAIC,IAAI,iBAAkB,CAC/CC,OAAQ,CAAEC,MAAOhD,KAFJ,OACTiD,EADS,OAMf,EAAKnC,SAAS,CAAEyB,OAAQU,EAASC,KAAKC,UANvB,2C,kGAUjB,WACE,OACE,sBAAK7C,UAAU,eAAeE,MAAO,CAAE4C,UAAW,QAAlD,UACE,cAAC,EAAD,CAAW/C,SAAUE,KAAKoC,iBAC1B,cAAC,EAAD,CAAWJ,OAAQhC,KAAKR,MAAMwC,gB,GArBpBtB,IAAMC,WA2BTwB,ICvBAW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCMdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2946d7d.chunk.js","sourcesContent":["// Import Axios from node modules\nimport axios from 'axios';\n\n// Axios Config for API request\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization:\n      'Client-ID OwOzO9jzOTE0AH1KlE0r5Npy4VlEey9TetWOU0AN33g',\n  },\n});\n","import React from 'react';\n\nclass SearchBar extends React.Component {\n  \n  // Initialize term state\n  state = { term: '' };\n\n  // Prevents form to do default page refresh on enter\n  // Adds search term to state\n  onFormSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.term);\n  };\n\n  // Component Render\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label style={ {margin: '0 0 10px 15px'} }>Image Search</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={e => this.setState({ term: e.target.value })}\n              placeholder=\"Search for Images\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nclass ImageCard extends React.Component {\n\n  // Initilize props, state and image reference\n  constructor(props) {\n    super(props);\n    this.state = { spans: 0 };\n    this.imageRef = React.createRef();\n  }\n\n  // Loads images and gets referation of image height\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  // Sets de span height for every image\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    const spans = Math.ceil(height / 10);\n    this.setState({ spans });\n  };\n\n  // Render function for Component\n  render() {\n    const { description, urls } = this.props.image;\n\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} alt={description} src={urls.regular} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","// Default Imports\nimport React from 'react';\n\n// CSS styling\nimport '../css/ImageList.css';\n\n// Components\nimport ImageCard from './ImageCard';\n\nconst ImageList = props => {\n  const images = props.images.map(image => {\n    return <ImageCard key={image.id} image={image} />;\n  });\n\n  return <div className=\"image-list\">{images}</div>;\n};\n\nexport default ImageList;\n","// Base Imports\nimport React from 'react';\nimport api from './api/api';\n\n// Components\nimport SearchBar from './components/SearchBar';\nimport ImageList from './components/ImageList';\n\nclass App extends React.Component {\n  \n  // Initialize state for Unspash images\n  state = { images: [] };\n\n  // This function gets the term from SearchBar Component\n  // Async Axios Get function for Unsplash Images\n  onSearchSubmit = async (term) => {\n    const response = await api.get('/search/photos', {\n      params: { query: term }\n    });\n\n    // Set response to images state\n    this.setState({ images: response.data.results });\n  };\n\n  // React render function\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: '45px' }}>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Adding polyfill for old browsers\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\n// Adds react to the file\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Main Component for the app\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}